apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias 'dvlp'
            keyPassword '1234qwer'
            storeFile file('D:/dvlp.jks')
            storePassword '1234qwer'
        }
    }
    buildToolsVersion '26.0.2'
    compileSdkVersion 26
    defaultConfig {
        applicationId "news.dvlp.testslidingmenupop"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2
        versionName "v1.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            matchingFallbacks = ['release']
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    allprojects {
        repositories {
            mavenCentral()
        }
    }
}
configurations.all {
//    transitive = false
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'


}





//打jar包使用，只能放在model gradle里面，本片文章里不用
//https://blog.csdn.net/g777520/article/details/53331797
//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete 'release/AndroidPlugin.jar'
}

//task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('release/')
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', 'AndroidPlugin.jar')
}

exportJar.dependsOn(deleteOldJar, build)
